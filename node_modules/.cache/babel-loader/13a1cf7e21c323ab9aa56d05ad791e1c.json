{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reactjs\\\\demo\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-labels */\n\n/* eslint-disable no-template-curly-in-string */\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = ({\n  status,\n  text,\n  todo,\n  todos,\n  setTodos\n}) => {\n  _s();\n\n  const [inputText, setInputText] = useState(\"\");\n\n  const editHandler = () => {\n    todos.map(item => {\n      if (item.id === todo.id) {\n        setInputText(\"aaa\");\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputText,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 18\n        }, this);\n      }\n    });\n  };\n\n  let edit = todos.map;\n\n  const deleteHandler = () => {\n    setTodos(todos.map(item => {\n      if (item.id === todo.id) {\n        if (todo.status === \"removed\") {\n          return { ...item,\n            status: \"asset\"\n          };\n        } else {\n          return { ...item,\n            status: \"removed\"\n          };\n        }\n      }\n\n      return item;\n    }));\n  };\n\n  const completeHandler = () => {\n    setTodos(todos.map(item => {\n      if (item.id === todo.id) {\n        return { ...item,\n          completed: !item.completed\n        };\n      }\n\n      return item;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: `todo-item ${todo.completed ? \"completed\" : \"\"}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: editHandler,\n      className: \"complete-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-check\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: completeHandler,\n      className: \"complete-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteHandler,\n      className: \"trash-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-trash\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"FupQuLxG7pBPrulNgTXkcZMsQO8=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/Reactjs/demo/src/components/Todo.js"],"names":["React","useState","Todo","status","text","todo","todos","setTodos","inputText","setInputText","editHandler","map","item","id","edit","deleteHandler","completeHandler","completed"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA,IAAhB;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA;AAA7B,CAAD,KAA4C;AAAA;;AACvD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;;AACA,QAAMS,WAAW,GAAG,MAAM;AACtBJ,IAAAA,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AAClB,UAAIA,IAAI,CAACC,EAAL,KAAYR,IAAI,CAACQ,EAArB,EAAyB;AACvBJ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,4BAAO;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAED,SAA1B;AAAA,oBAAsCJ;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KALD;AAOH,GARD;;AAUE,MAAIU,IAAI,GAAIR,KAAK,CAACK,GAAlB;;AAGF,QAAMI,aAAa,GAAG,MAAM;AAC1BR,IAAAA,QAAQ,CACND,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AAClB,UAAIA,IAAI,CAACC,EAAL,KAAYR,IAAI,CAACQ,EAArB,EAAyB;AACvB,YAAIR,IAAI,CAACF,MAAL,KAAgB,SAApB,EAA+B;AAC7B,iBAAO,EACL,GAAGS,IADE;AAELT,YAAAA,MAAM,EAAE;AAFH,WAAP;AAID,SALD,MAKO;AACL,iBAAO,EACL,GAAGS,IADE;AAELT,YAAAA,MAAM,EAAE;AAFH,WAAP;AAID;AACF;;AACD,aAAOS,IAAP;AACD,KAfD,CADM,CAAR;AAkBD,GAnBD;;AAqBA,QAAMI,eAAe,GAAG,MAAM;AAC5BT,IAAAA,QAAQ,CACND,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AAClB,UAAIA,IAAI,CAACC,EAAL,KAAYR,IAAI,CAACQ,EAArB,EAAyB;AACvB,eAAO,EACL,GAAGD,IADE;AAELK,UAAAA,SAAS,EAAE,CAACL,IAAI,CAACK;AAFZ,SAAP;AAID;;AACD,aAAOL,IAAP;AACD,KARD,CADM,CAAR;AAWD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAG,aAAYP,IAAI,CAACY,SAAL,GAAiB,WAAjB,GAA+B,EAAG,EAA9D;AAAA,gBACGb;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,OAAO,EAAEM,WAAjB;AAA8B,MAAA,SAAS,EAAC,cAAxC;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAQ,MAAA,OAAO,EAAEM,eAAjB;AAAkC,MAAA,SAAS,EAAC,cAA5C;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAQ,MAAA,OAAO,EAAED,aAAjB;AAAgC,MAAA,SAAS,EAAC,WAA1C;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA,kBAA6BZ;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAlED;;GAAMD,I;;KAAAA,I;AAmEN,eAAeA,IAAf","sourcesContent":["/* eslint-disable no-labels */\r\n/* eslint-disable no-template-curly-in-string */\r\nimport React,{ useState} from \"react\";\r\n\r\nconst Todo = ({ status, text, todo, todos, setTodos}) => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const editHandler = () => {\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          setInputText(\"aaa\")\r\n          return <input type=\"text\" value={inputText}>{text}</input>\r\n        }\r\n      })\r\n    \r\n  }\r\n\r\n    let edit =  todos.map\r\n\r\n\r\n  const deleteHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          if (todo.status === \"removed\") {\r\n            return {\r\n              ...item,\r\n              status: \"asset\",\r\n            };\r\n          } else {\r\n            return {\r\n              ...item,\r\n              status: \"removed\",\r\n            };\r\n          }\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </li>\r\n      <button onClick={editHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\">Edit</i>\r\n      </button>\r\n      <button onClick={completeHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\">{status}</i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}